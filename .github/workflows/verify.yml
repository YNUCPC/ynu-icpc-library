name: verify

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  skip-check:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          skip_after_successful_duplicate: 'false'
          paths: '["**.hpp", "**.cpp"]'

  oj-verify:
    needs: skip-check
    if: ${{ needs.skip-check.outputs.should_skip != 'true' }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install dependencies
        run: pip3 install online-judge-verify-helper

      - name: Cache test cases
        uses: actions/cache@v2
        with:
          path: ./.verify-helper/cache
          key: ${{ runner.os }}-verify-helper-${{ hashFiles('**/*.test.cpp') }}
          restore-keys: |
            ${{ runner.os }}-verify-helper-

      - name: Run tests (on main branch)
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DROPBOX_TOKEN: ${{ secrets.ATCODER_DROPBOX_TOKEN }}
        run: oj-verify run --jobs 2

      - name: Run tests (on other branch)
        if: github.ref != 'refs/heads/main'
        env:
          DROPBOX_TOKEN: ${{ secrets.ATCODER_DROPBOX_TOKEN }}
        run: oj-verify run --jobs 2

      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.YNUCPC_ACCESS_TOKEN_APP_ID }}
          private_key: ${{ secrets.YNUCPC_ACCESS_TOKEN_APP_PRIVATE_KEY }}

      - name: Generate documents
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_PAT: ${{ steps.generate_token.outputs.token }}
        run: oj-verify docs
